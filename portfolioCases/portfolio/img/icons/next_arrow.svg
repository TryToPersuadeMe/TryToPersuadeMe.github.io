<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 477.867 477.867"><script>// Catch errors if signal is already set by user agent or other extension try { Object.defineProperty(navigator, &apos;globalPrivacyControl&apos;, { value: false, enumerable: true }) // Remove script tag after execution document.currentScript.parentElement.removeChild(document.currentScript) } catch (e) {}</script><path d="M238.933 0C106.974 0 0 106.974 0 238.933s106.974 238.933 238.933 238.933 238.933-106.974 238.933-238.933S370.893 0 238.933 0zm115.076 250.356c-.397.441-.817.861-1.258 1.258l-170.667 153.6c-7.128 6.167-17.906 5.389-24.073-1.739-5.996-6.93-5.449-17.357 1.238-23.622l156.57-140.919-156.57-140.92c-6.879-6.444-7.231-17.244-.787-24.123 6.265-6.687 16.693-7.234 23.622-1.238l170.667 153.6c7.003 6.308 7.566 17.1 1.258 24.103z" fill="#fff" data-original="#000000" xmlns="http://www.w3.org/2000/svg"/><script>try { Object.defineProperty(screen, &quot;availTop&quot;, { value: 0 }); } catch (e) {} try { Object.defineProperty(screen, &quot;availLeft&quot;, { value: 0 }); } catch (e) {} try { Object.defineProperty(screen, &quot;availWidth&quot;, { value: 1920 }); } catch (e) {} try { Object.defineProperty(screen, &quot;availHeight&quot;, { value: 1080 }); } catch (e) {} try { Object.defineProperty(screen, &quot;colorDepth&quot;, { value: 24 }); } catch (e) {} try { Object.defineProperty(screen, &quot;pixelDepth&quot;, { value: 24 }); } catch (e) {} try { Object.defineProperty(navigator, &quot;keyboard&quot;, { value: undefined }); } catch (e) {} try { Object.defineProperty(navigator, &quot;hardwareConcurrency&quot;, { value: 8 }); } catch (e) {} try { Object.defineProperty(navigator, &quot;deviceMemory&quot;, { value: 8 }); } catch (e) {} try { Object.defineProperty(navigator, &quot;webkitTemporaryStorage&quot;, { value: undefined }); } catch (e) {} try { Object.defineProperty(navigator, &quot;webkitPersistentStorage&quot;, { value: undefined }); } catch (e) {} try { Object.defineProperty(navigator, &quot;appVersion&quot;, { value: &quot;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36 Edg/83.0.478.54&quot; }); } catch (e) {} try { Object.defineProperty(navigator, &quot;doNotTrack&quot;, { value: null }); } catch (e) {} navigator.getBattery = function getBattery () { let battery = {&quot;charging&quot;:true,&quot;chargingTime&quot;:0,&quot;dischargingTime&quot;:null,&quot;level&quot;:1} try { Object.defineProperty(battery, &apos;onchargingchange&apos;, { enumerable: true, configurable: false, writable: false, value: undefined }) } catch (e) {} try { Object.defineProperty(battery, &apos;onchargingtimechange&apos;, { enumerable: true, configurable: false, writable: false, value: undefined }) } catch (e) {} try { Object.defineProperty(battery, &apos;ondischargingtimechange&apos;, { enumerable: true, configurable: false, writable: false, value: undefined }) } catch (e) {} try { Object.defineProperty(battery, &apos;onlevelchange&apos;, { enumerable: true, configurable: false, writable: false, value: undefined }) } catch (e) {} battery.addEventListener = function addEventListener () { return } return Promise.resolve(battery) } try { window.screenY = 0 } catch (e) { } try { window.screenTop = 0 } catch (e) { } try { window.top.window.outerHeight = window.screen.height } catch (e) { } try { window.screenX = 0 } catch (e) { } try { window.screenLeft = 0 } catch (e) { } try { window.top.window.outerWidth = window.screen.width } catch (e) { }</script></svg>